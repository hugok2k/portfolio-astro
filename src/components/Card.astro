---
export interface Props {
  title: string
  body: string
  href: string
  deploy: string
  image: string
  tools: string[]
}

const { title, body, href, deploy, image, tools } = Astro.props
import Github from './svg/github.astro'
import LinkEx from './svg/link.astro'
import Next from './svg/next.astro'
import Css3 from './svg/css3.astro'
import Google from './svg/google.astro'
import React from './svg/react.astro'
import Tailwind from './svg/tailwind.astro'
import Astrosvg from './svg/astrosvg.astro'
import Node from './svg/node.astro'
import Mongodb from './svg/mongodb.astro'
import Codepen from './svg/codepen.astro'
import Html5 from './svg/html5.astro'
import Typescript from './svg/typescript.astro'
---

<article class='cardContainer'>
  <header class='imgContainer'>
    <img class='imgProject' src={image} alt={title} loading='lazy' />
    <a
      class='textImg'
      href={deploy}
      target='_blank'
      rel='noreferrer noopener'
      aria-label='Link hacia la demo'
    >
      <span class='textDeploy'>Ir al sitio</span>
      <LinkEx height='22' width='22' />
    </a>
  </header>
  <a class='titlecard' href={deploy}>
    {title}
  </a>
  <p class='parrafo'>
    {body}
  </p>
  <footer class='toolsContainer'>
    <section class='tools'>
      {
        tools.map((e) => {
          return (
            <span class='toolSvg'>
              {e === 'NextJS' ? (
                <Next />
              ) : e === 'CSS' ? (
                <Css3 />
              ) : e === 'GoogleAPI' ? (
                <Google />
              ) : e === 'ReactJS' ? (
                <React />
              ) : e === 'Tailwind' ? (
                <Tailwind />
              ) : e === 'Astro' ? (
                <Astrosvg />
              ) : e === 'NodeJS' ? (
                <Node />
              ) : e === 'MongoDB' ? (
                <Mongodb />
              ) : e === 'HTML' ? (
                <Html5 />
              ) : e === 'TypeScript' ? (
                <Typescript />
              ) : (
                ''
              )}
            </span>
          )
        })
      }
    </section>
    <section class='svglinkContainer'>
      <a
        class='svglink'
        href={deploy}
        target='_blank'
        rel='noreferrer noopener'
        aria-label='link a demo'
        ><LinkEx height='26' width='26' />
      </a>
      {
        href.includes('github') ? (
          <a
            class='svglink'
            href={href}
            target='_blank'
            rel='noreferrer noopener'
            aria-label='link a github'
          >
            <Github height='24' width='24' />
          </a>
        ) : (
          <a
            class='svglinkCodepen'
            href={href}
            target='_blank'
            rel='noreferrer noopener'
            aria-label='link a codepen'
          >
            <Codepen />
          </a>
        )
      }
    </section>
  </footer>
</article>

<style>
  .tailwind {
    height: 24px;
  }
  .cardContainer {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    background-color: var(--color-bg-card);
    width: 350px;
    height: 460px;
    box-sizing: border-box;
  }
  .imgContainer {
    position: relative;
    height: 178px;
    width: 350px;
    overflow: hidden;
  }
  .titlecard {
    text-align: left;
    font-weight: 600;
    color: #ff6dae;
    padding: 14px 24px 0 24px;
    box-sizing: border-box;
    width: 100%;
    font-size: 1.1rem;
  }
  .titlecard:hover {
    color: var(--color-primary);
  }
  .parrafo {
    width: 100%;
    padding: 24px;
    box-sizing: border-box;
    font-size: 1rem;
    height: 140px;
    color: var(--color-text-base);
  }
  .imgProject {
    width: 350px;
    height: 178px;
  }
  .toolsContainer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 86px;
    width: 100%;
  }
  .tools {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 14px;
    padding: 8px 24px;
    width: 100%;
    box-sizing: border-box;
    color: #fff;
  }
  .svglinkContainer {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    gap: 14px;
    width: 100%;
    padding: 0px 24px;
    padding-bottom: 20px;
    box-sizing: border-box;
  }
  .svglink {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    fill: var(--color-text-base);
    transition: 0.3s;
  }
  .svglink:hover {
    fill: var(--color-primary);
  }
  .svglinkCodepen {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    stroke: var(--color-svg);
    transition: 0.3s;
  }
  .svglinkCodepen:hover {
    stroke: var(--color-primary);
  }
  .textImg {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    opacity: 0;
    transition: 0.5s;
    font-size: 18px;
    font-weight: 600;
    fill: #fff;
  }
  .textImg:hover {
    opacity: 1;
  }
  .textDeploy {
    padding-right: 10px;
    text-decoration: none;
    color: #fff;
  }
  .toolSvg {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 24px;
  }
</style>
